# 실습-6: Applications on M4 

- [Home Page](README.md) 로 돌아가기

## 목적

- Azure Sphere High-level Applicaiton 의 기본적인 이해
- Visual Studio 를 이용해 Application 을 빌드하고 디버그하는 방법을 익힙니다.
- Azure Sphere SDK 의 GPIO API 사용방법을 익힙니다.

## 단계

1. Azure Sphere utility 에서 디바이스를 디버그 모드로 전환합니다. (OTA는 비활성화됨)
   
   `azsphere device enable-development --enablertcoredebugging`

2. Azure Sphere 예제 Repository 를 복사합니다.

    MediaTek <br>
    `git clone https://github.com/MediaTek-Labs/mt3620_m4_software.git`

    CodethinkLabs<br>    `git clone https://github.com/CodethinkLabs/mt3620-m4-samples`    
    `git submodule update --init`


3. Visual Studio 를 실행하여 `File - Open - CMake...` 를 차례로 클릭합니다.
![](images/open_CMake.png)

3. `.\\mt3620_m4_software\MT3620_M4_Sample_Code\BareMetal\MT3620_RTApp_BareMetal_GPIO`폴더로 이동한 후, CMakeLists.txt 를 선택합니다. 
   
 
 ![](images/open_Cmake_mediatek_gpio.png)

예제 프로젝트가 열린 뒤 Select Start up item 을 GDB Debugger(RTCore) 선택 후 **F5** 를 누르면 빌드 후 디버깅을 위해 어플리케이션이 디바이스에 로드됩니다.

 ![](images/rt_gdb.png)
   
4. 응용 프로그램이 로드 된 후 LED1이 깜박이기 시작합니다. **버튼A**
를 누르면 깜박임 속도가 변경됩니다. LED1과 버튼A는 모두 GPIO 핀에 연결되며 Real-Time Applicaiton 에 의해 제어됩니다.


5. 156번 라인에서 **F9** 를 눌러 *gpio_input* 함수에 브레이크포인트를 설정하면, 
프로그램이 이 라인에서 멈추는 것을 볼 수 있습니다. 다시 **F5** 를 눌러 LED ON/OFF 를 제어하며 디버깅이 가능합니다.

 ![](images/rt_debug.png)


## 더 보기
- [FreeRTOS 로 GPIO 제어](https://github.com/MediaTek-Labs/mt3620_m4_software/tree/master/MT3620_M4_Sample_Code/FreeRTOS/MT3620_RTApp_FreeRTOS_GPIO)
- [Inter-core communication Microsoft 예제 HLapp + RTapp(BareMetal)](https://github.com/Azure/azure-sphere-samples/tree/master/Samples/IntercoreComms)
- [Inter-core mailbox MediaTek 예제 HLapp + 2 x RTapp(FreeRTOS)](https://github.com/MediaTek-Labs/mt3620_m4_software/tree/master/MT3620_M4_Sample_Code/FreeRTOS/MT3620_RTApp_FreeRTOS_MBOX)
- [Integrating FreeRTOS with Azure IoT Central](https://github.com/gloveboxes/Azure-Sphere-Learning-Path/blob/master/zdocs/Lab_5_FreeRTOS_and_Azure_IoT_Central/README.md)
- [Multi-Core app and OTA deployment lab](https://github.com/JuergenSchwertl/AzureSphereSamples/tree/master/OTA)

